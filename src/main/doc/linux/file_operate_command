一 针对目录的相关操作
	1. 几个比较特殊的目录：
		a. .:代表当前层目录
		b. ..:代表上一层目录
		c. ～：代表“目前用户身份”所在的主文件夹
		d. -:代表命令切换的前一个目录
		e. ~account:代表account这个用户的主文件夹（account是一个账户名称）
	    注：针对根目录/，根目录的上一层(..)与根目录(.)本身，是同一个目录

	2. 切换目录(cd):
		a. cd ~vbird:切换到vbird这个用户的主文件夹，即/home/vbird
		b. cd ~:切换到当前登陆用户的主文件夹，即/root这个目录
		c. cd :也表示切换到当前登陆用户的主文件夹
		d. cd ..:切换到当前目录的上一目录中
		e. cd -:回到前一次所在的目录下
		f. cd [绝对路径/相对路径]：切换具体的某个路径下
	   注：使用Tab按钮可以文件名称自动补全

	3. 显示当前所在的目录(pwd)：
		a. pwd [-P]:显示出当前所在的目录路径，[-P]表示需要显示当前路径的实际路径，而非link路径(若当前路径link到其他目录时，显示其真实的路径)

	4. 创建新目录(mkdir)
		a. mkdir [-mp] dirname
			参数说明：
				-m: 配置文件目录的权限，直接进行设置，否则使用默认权限-umask(mkdir -m 711 test1)
				-p: 帮助你直接将你需要的目录(包含上层目录)递归创建出来,即一次创建多层目录(mkdir -p test1/test2/test3/test4)
				    若直接使用mkdir test1/test2/test3/test4创建多层目录时，会跑出错误(具体请自行查看)

	5.删除空的目录(rmdir)--只能删除“空”的目录，当删除一个包含子目录的目录时，会抛出一个异常
		a. rmdir [-p] dirname
			参数说明：
				-p: 连同上层“空的”目录也一起删除


二. 文件与目录的管理
	1. 查看文件与路径的命令(ls)
		ls [-aAdfFhilnrRSt] [--color={never,auto,always}] [--full-time] dirname
		参数说明：
			-a: 全部的文件，包括隐藏文件(开头为.的文件)
			-A: 列出全部的文件(连同隐藏文件，但是不包括.和..这两个目录)
			-d: 仅列出目录本身，而不是列出目录内的文件数据
			-f: 直接列出结果，不进行排序(ls会默认进行文件的排序)
			-F: 根据文件，目录等信息给予附加数据结构(*:代表可执行文件，/:代表目录，=：代表socket文件，|：代表FIFO文件)
			-h: 将文件容量以人类易读的方式(GB,KB)显示出来
			-i: 列出inode号码
			-l: 列出长数据串，包含文件的属性与权限等
			-n: 列出UID鱼GID，而非用户与用户组的名称
			-r: 将排序结果反响输出
			-R：连同子目录内容一起列出来，等于该目录下的所有文件都会显示出来
			-S: 以文件容量大小排序，而不是使用文件名排序(ls默认根据文件名排序)
			-t: 以时间排序
			--color=never : 不要根据文件特性给予颜色显示
			--color=always : 显示颜色
			--color=auto : 让系统自行依据设置来判断是否给予颜色
			--full-time : 以完整时间模式显示(包含年，月，日，时，分)输出
			--time=(atime,ctime) : 输出访问时间或改变权限属性时间(ctime)，而非内容更改时间(modification time)

	2. 复制文件或目录(cp)
		cp [-adfilprsu] 源文件(source) 目标文件(destination)
		cp [options] source1 source2 source3 ..... directory
		参数说明：
			-a: 相当于-pdr的组合意思
			-d: 若源文件为链接文件的属性(link file),则复制链接文件属性而非文件本身
			-f: 为强制(force)的意思，若目标文件已经存在且无法开启，则删除后再尝试一次
			-i: 若目标文件(destination)已经存在时，在覆盖时会先询问操作的进行
			-l: 进行硬链接(hard link)的链接文件创建，而非复制文件本身
			-p: 连同文件的属性一起复制，而非使用默认属性(包括文件权限也一样，所以不同权限用户执行该操作结果会不一样)
			-r: 递归进行复制，用于目录的复制行为
			-s: 复制成符号链接文件(symbolic link),即“快捷方式”文件
			-u: 若destination比source旧才进行更新destination
		注：若源文件是两个以上，则目标文件一定得是“目录”
	
	3. 移除文件或目录(rm)	
		rm [-fir] 文件或目录
		参数说明：
			-f: 就是force的意思，忽略不存在的文件，不会出现警告信息
			-r: 递归删除，最常用在目录的删除下(非常危险的一个操作)
			-i: 互动模式，在删除前会询问用户是否操作
		注：rmdir只能删除一个空的目录，当目录下存在内容时，只能使用rm
		    rm默认是带有-i执行参数的，若你想忽略alias的指定参数可以在命令前加上\，即\rm -r dirname/filename
		    若需要删除一个名称以-开头的文件时，可以使用rm ./-aaa或者rm -- -aa

	4. 移动文件或目录/更改名称
		mv [-fiu] source destination
		mv [options] source1 source2 source3.....directory
		参数说明：
			-f: force强制的意思，若目标文件已经存在，则直接覆盖而不会询问
			-i: 若目标文件(destination)已经存在，会先询问是否进行覆盖
			-u: 若目标文件已经存在，并且source比较新，，才会更新
		注：mv也可以进行文件名称的修改操作，即mv oldname newname,在linux中rename也可以修改文件的名称

	5. 命令获取路径的目录名与文件名
		basename /etc/sysconfig/network:获取文件名称，即network
		dirname /etc/sysconfig/network:获取目录名称，即/etc/sysconfig

	6.脚本文件名的查询:which
		which [-a] command
			a: 将所有由PATH目录中可以找出来的命令均列出来，而不止第一个被找到的文件名称

	7.文件名的查找
		whereis：寻找特定文件
			whereis [-busm] filename/dirname
			参数说明：
				b：只找二进制格式的文件
				m：只找在说明文件manual路径下的文件
				s：只找source源文件
				u：查找不在上述三个选项当中的其他特殊文件

		locate：
			locate [-ra] keyword
			参数说明：
				r：忽略大小写的差异
				a：后面可直接接正则表达式的显示方式
		注意：whereis和locate寻找的文件数据均来自/var/lib/mlocate中，而不是直接去硬盘中查找数据，所以速度很快。但是这种方式可能会查询不到一些已经被删除或新增的文件。此时可以通过使用updatedb手动的更新数据库（updatedb根据/etc/updatedb.conf的设置去查找系统硬盘内的文件名，并更新/var/lib/mlocate内的数据库文件）

		find: 直接查询硬盘文件数据，所以会比较耗时
			find [PATH] [option] [action]
